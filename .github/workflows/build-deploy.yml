name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Build and Publish
      run: dotnet publish hello-world.csproj /p:Configuration=Release /p:TargetFramework=netcoreapp3.1 /p:SelfContained=true /p:PublishSingleFile=true /p:PublishTrimmed=true /p:RuntimeIdentifier=win-x64 -o ./publish
      working-directory: ./hello-world
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: HelloExe
        path: ./hello-world/publish/hello-world.exe

    - name: Get Artifact ID
      id: get_artifact_id
      run: |
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")
        echo "::set-output name=artifact_id::$(echo $response | jq -r '.artifacts[0].id')"
        artifact_id=${{ steps.get_artifact_id.outputs.artifact_id }}
      shell: bash

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: HelloExe
        path: artifacts

    - name: Set Artifact Path
      id: set_artifact_path
      run: echo "::set-output name=artifact_path::$(find $GITHUB_WORKSPACE/artifacts -name '*.exe' -print0 | xargs -0 ls -1 -t | head -n1)"
      
    - name: Print Artifact Download Link
      run: echo "${{ github.server_url }}/${{ github.repository }}/raw/${{ steps.set_artifact_path.outputs.artifact_path }}"